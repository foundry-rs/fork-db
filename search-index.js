var searchIndex = new Map(JSON.parse('[["foundry_fork_db",{"t":"EEEEECCCPIIIFGPPPPIIIPGPPIISGPFPPIIIPPIIPPPNNONNONNNNOOONNNNNNNNNNONNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONOONNNNNNNNNNNNONNONNNNNNNNNNNNNNNNFFFFFFINNNNOONONNNNNNNNNNNNNOOONNNNNNNNNNNOONNONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOONNNNNNNNONNNNNNNNNNNNNNNNNNNNNPGIPPPPPPPPPPNNNNNNNNNNNNNNNNN","n":["BackendHandler","BlockchainDb","DatabaseError","DatabaseResult","SharedBackend","backend","cache","error","Account","AccountFuture","AccountInfoSender","AddressData","BackendHandler","BackendRequest","Basic","Block","BlockHash","","BlockHashData","BlockHashFuture","BlockHashSender","BlockInPlace","BlockingMode","FullBlock","","FullBlockFuture","FullBlockSender","NON_ARCHIVE_NODE_WARNING","ProviderRequest","SetPinnedBlock","SharedBackend","Storage","","StorageData","StorageFuture","StorageSender","Transaction","","TransactionFuture","TransactionSender","UpdateAddress","UpdateBlockHash","UpdateStorage","__clone_box","","account_requests","accounts","accounts_len","backend","basic_ref","block_hash_ref","block_hashes","block_hashes_len","block_id","block_requests","blocking_mode","borrow","","","","","borrow_mut","","","","","cache","clone","","clone_into","","clone_to_uninit","","code_by_hash_ref","data","db","default","do_get_basic","do_get_block_hash","do_get_storage","eq","flush_cache","flush_cache_to","fmt","","","from","","","","","get_account_req","get_full_block","get_transaction","incoming","insert_or_update_address","insert_or_update_block_hashes","insert_or_update_storage","into","","","","","into_future","new","","on_request","pending_requests","poll","provider","queued_requests","request_account","request_account_storage","request_full_block","request_hash","request_transaction","run","set_pinned_block","spawn_backend","spawn_backend_thread","storage","storage_len","storage_ref","storage_requests","to_owned","","transport","try_from","","","","","try_into","","","","","type_id","","","","","with_blocking_mode","BlockchainDb","BlockchainDbMeta","FlushJsonBlockCacheDB","JsonBlockCacheDB","JsonBlockCacheData","MemDb","StorageInfo","__clone_box","","","accounts","","block_env","block_hashes","","borrow","","","","","","borrow_mut","","","","","","cache","","cache_path","cfg_env","clear","clone","","","clone_into","","","clone_to_uninit","","","commit","data","","db","","","default","deserialize","","do_commit","do_insert_account","drop","eq","equivalent","","flush","flush_to","fmt","","","","","","from","","","","","","hosts","into","","","","","","is_transient","load","meta","","","","new","","","new_db","new_skip_check","serialize","","storage","","to_owned","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","BlockNotFound","DatabaseError","DatabaseResult","Err","GetAccount","GetBlockHash","GetFullBlock","GetStorage","GetTransaction","MissingCode","Ok","Recv","Send","borrow","borrow_mut","fmt","","from","","","","","get_rpc_error","into","is_possibly_non_archive_node_error","source","to_string","try_from","try_into","type_id"],"q":[[0,"foundry_fork_db"],[8,"foundry_fork_db::backend"],[143,"foundry_fork_db::cache"],[256,"foundry_fork_db::error"],[286,"dyn_clone::sealed"],[287,"alloy_primitives::bits::address"],[288,"revm_primitives::state"],[289,"std::collections::hash::map"],[290,"core::option"],[291,"core::result"],[292,"alloy_primitives::aliases"],[293,"revm_primitives::bytecode"],[294,"alloc::sync"],[295,"std::path"],[296,"core::fmt"],[297,"eyre"],[298,"alloy_transport::trait"],[299,"core::clone"],[300,"alloy_network::any"],[301,"alloy_provider::provider::trait"],[302,"core::marker"],[303,"alloy_rpc_types_eth::transaction"],[304,"alloy_serde::other"],[305,"alloy_rpc_types_eth::block"],[306,"alloy_eips::eip1898"],[307,"core::convert"],[308,"futures_channel::mpsc"],[309,"core::pin"],[310,"core::task::wake"],[311,"core::task::poll"],[312,"std::sync::mpsc"],[313,"core::ops::function"],[314,"core::any"],[315,"parking_lot::rwlock"],[316,"serde::de"],[317,"revm_primitives::env"],[318,"alloc::string"],[319,"serde::ser"],[320,"core::error"]],"i":"````````Cf`````BlAn21```0`21````1`21```21``1110hCb1111111001403214032112121211102111211321403210110111403210010000000000211111102104032140321403211```````DnFhBb20120210FfFnG`54321055243543543543321525341330444225432105432104543210225251542554153543543210543210543210Gj``Bf11111101111111111111111111","f":"```````````````````````````````````````````{{bd}f}0`{{{b{h}}}{{n{jl}}}}{{{b{h}}}A`}`{{{b{h}}j}{{Ad{{Ab{l}}c}}}{}}{{{b{h}}Af}{{Ad{Ahc}}}{}}{{{b{h}}}{{n{AjAh}}}}3```{b{{b{c}}}{}}0000{{{b{Al}}}{{b{Alc}}}{}}0000`{{{b{An}}}An}{{{b{h}}}h}{{b{b{Alc}}}f{}}0{bf}0{{{b{h}}Ah}{{Ad{B`c}}}{}}{{{b{h}}}{{Bd{Bb}}}}`{{}An}{{{b{h}}j}{{Bf{{Ab{l}}}}}}{{{b{h}}Af}{{Bf{Ah}}}}{{{b{h}}jAj}{{Bf{Aj}}}}{{{b{An}}{b{An}}}Bh}{{{b{h}}}f}{{{b{h}}{b{Bj}}}f}{{{b{Bl}}{b{AlBn}}}C`}{{{b{An}}{b{AlBn}}}C`}{{{b{h}}{b{AlBn}}}C`}{cc{}}0000{{{b{{Cb{ce}}}}j}{{Cf{Cd}}}{ChCj}{{Cn{cCl}}CjD`}}{{{b{h}}c}{{Bf{{Dd{{Df{{Dd{Db}}}}}}}}}{{Dj{Dh}}}}{{{b{h}}Ah}{{Bf{{Dd{Db}}}}}}`{{{b{h}}{n{jl}}}f}{{{b{h}}{n{AjAh}}}f}{{{b{h}}{n{jDl}}}f}{{}c{}}0000{{}}{{eDn{E`{Bl}}{Ab{Dh}}}{{Cb{ce}}}{ChCj}{{Cn{cCl}}CjD`}}{{eDn{Ab{Dh}}}{{Eb{h{Cb{ce}}}}}{ChCjD`}{{Cn{cCl}}D`Cj}}{{{b{Al{Cb{ce}}}}Bl}f{ChCj}{{Cn{cCl}}CjD`}}`{{{Ed{{b{Al{Cb{ce}}}}}}{b{AlEf}}}{{Eh{g}}}{ChCjD`}{{Cn{cCl}}CjD`}{}}``{{{b{Al{Cb{ce}}}}j{Ej{{Bf{l}}}}}f{ChCj}{{Cn{cCl}}CjD`}}{{{b{Al{Cb{ce}}}}jAj{Ej{{Bf{Aj}}}}}f{ChCj}{{Cn{cCl}}CjD`}}{{{b{Al{Cb{ce}}}}Dh{Ej{{Bf{{Dd{{Df{{Dd{Db}}}}}}}}}}}f{ChCj}{{Cn{cCl}}CjD`}}{{{b{Al{Cb{ce}}}}Af{Ej{{Bf{Ah}}}}}f{ChCj}{{Cn{cCl}}CjD`}}{{{b{Al{Cb{ce}}}}Ah{Ej{{Bf{{Dd{Db}}}}}}}f{ChCj}{{Cn{cCl}}CjD`}}{{{b{An}}e}c{}{{En{}{{El{c}}}}}}{{{b{h}}c}{{F`{f}}}{{Dj{Dh}}}}{{eDn{Ab{Dh}}}h{ChCjD`}{{Cn{cCl}}D`Cj}}0{{{b{h}}}{{n{jDl}}}}{{{b{h}}}A`}{{{b{h}}jAj}{{Ad{Ajc}}}{}}`{bc{}}0`{c{{Ad{e}}}{}{}}0000{{}{{Ad{c}}}{}}0000{bFb}0000{{{b{h}}An}h}```````{{bd}f}00{{{b{Dn}}}{{b{{Fd{{n{jl}}}}}}}}``{{{b{Dn}}}{{b{{Fd{{n{AjAh}}}}}}}}`{b{{b{c}}}{}}00000{{{b{Al}}}{{b{Alc}}}{}}00000{{{b{Dn}}}{{b{{Bd{Ff}}}}}}```{{{b{Bb}}}f}{{{b{Dn}}}Dn}{{{b{Fh}}}Fh}{{{b{Bb}}}Bb}{{b{b{Alc}}}f{}}00{bf}00{{{b{AlBb}}{n{jFj}}}f}``{{{b{Dn}}}{{b{{Bd{Bb}}}}}}{{{b{Ff}}}{{b{{Bd{Bb}}}}}}`{{}Bb}{c{{Ad{Fh}}}Fl}{c{{Ad{Fn}}}Fl}{{{b{Bb}}{n{jFj}}}f}{{{b{Bb}}jl}f}{{{b{AlG`}}}f}{{{b{Fh}}{b{Fh}}}Bh}{{b{b{c}}}Bh{}}0{{{b{Ff}}}f}{{{b{Ff}}{b{Bj}}}f}{{{b{Dn}}{b{AlBn}}}C`}{{{b{Fh}}{b{AlBn}}}C`}{{{b{Bb}}{b{AlBn}}}C`}{{{b{Ff}}{b{AlBn}}}C`}{{{b{Fn}}{b{AlBn}}}C`}{{{b{G`}}{b{AlBn}}}C`}{cc{}}00000`{{}c{}}00000{{{b{Ff}}}Bh}{c{{F`{Ff}}}{{Dj{Gb}}}}{{{b{Dn}}}{{b{{Bd{{Fd{Fh}}}}}}}}{{{b{Ff}}}{{b{{Bd{{Fd{Fh}}}}}}}}``{{Fh{Ab{Gb}}}Dn}{{GdGf}Fh}{{{Bd{{Fd{Fh}}}}{Ab{Gb}}}Ff}{{Fh{Ab{Gb}}Bh}Dn}3{{{b{Fh}}c}AdGh}{{{b{Fn}}c}AdGh}{{{b{Dn}}}{{b{{Fd{{n{jDl}}}}}}}}`{bc{}}00{c{{Ad{e}}}{}{}}00000{{}{{Ad{c}}}{}}00000{bFb}00000`````````````{b{{b{c}}}{}}{{{b{Al}}}{{b{Alc}}}{}}{{{b{Gj}}{b{AlBn}}}C`}0{cc{}}{GlGj}{GnGj}{{{H`{c}}}Gj{}}{HbGj}{{{b{Gj}}}{{Ab{{b{Cd}}}}}}{{}c{}}{{{b{Gj}}}Bh}{{{b{Gj}}}{{Ab{{b{Hd}}}}}}{bGf}?>=","D":"O`","p":[[1,"reference"],[5,"Private",286],[1,"unit"],[5,"SharedBackend",8],[5,"Address",287],[5,"AccountInfo",288],[5,"HashMap",289],[1,"usize"],[6,"Option",290],[6,"Result",291],[1,"u64"],[8,"B256",292],[8,"U256",292],[0,"mut"],[6,"BlockingMode",8],[6,"Bytecode",293],[5,"MemDb",143],[5,"Arc",294],[8,"DatabaseResult",256],[1,"bool"],[5,"Path",295],[6,"BackendRequest",8],[5,"Formatter",296],[8,"Result",296],[5,"BackendHandler",8],[5,"Report",297],[6,"ProviderRequest",8],[10,"Transport",298],[10,"Clone",299],[5,"AnyNetwork",300],[10,"Provider",301],[10,"Unpin",302],[5,"Transaction",303],[5,"WithOtherFields",304],[5,"Block",305],[6,"BlockId",306],[10,"Into",307],[8,"StorageInfo",143],[5,"BlockchainDb",143],[5,"UnboundedReceiver",308],[1,"tuple"],[5,"Pin",309],[5,"Context",310],[6,"Poll",311],[5,"Sender",312],[17,"Output"],[10,"FnOnce",313],[8,"Result",297],[5,"TypeId",314],[8,"RwLock",315],[5,"JsonBlockCacheDB",143],[5,"BlockchainDbMeta",143],[5,"Account",288],[10,"Deserializer",316],[5,"JsonBlockCacheData",143],[5,"FlushJsonBlockCacheDB",143],[5,"PathBuf",295],[5,"Env",317],[5,"String",318],[10,"Serializer",319],[6,"DatabaseError",256],[5,"RecvError",312],[5,"SendError",308],[5,"TrySendError",308],[6,"Infallible",307],[10,"Error",320]],"r":[[0,8],[1,143],[2,256],[3,256],[4,8]],"b":[[271,"impl-Display-for-DatabaseError"],[272,"impl-Debug-for-DatabaseError"],[274,"impl-From%3CRecvError%3E-for-DatabaseError"],[275,"impl-From%3CSendError%3E-for-DatabaseError"],[276,"impl-From%3CTrySendError%3CT%3E%3E-for-DatabaseError"],[277,"impl-From%3CInfallible%3E-for-DatabaseError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKYAJAABAAQACAAEABEAAAATAAIAGAAAABoAAQAgAAAAIgADACcAAQAsAAEAMgABADkACQBEAAYATQAEAFQAAgBoAAEAbQABAHsAAAB9ABEAlgADAJwAAACfAAsArgAAALAACQC7AAAAvwACAMMABADKAAUA4gAAAOYAAADoAAEA7AAVAAUBBQAMAQUAEwEEABoBBAA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[8776]}